<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CommunityDAO">
    
    
    
    
    
    <insert id="regist" parameterType="String">
    
    	INSERT INTO community (
		    channel_id
		) VALUES (
			<if test='value != null and value != ""'>
            	#{value}::UUID
        	</if>
		);
		
		<selectKey keyProperty="value" resultType="String" order="AFTER">
            SELECT 
            	community_id 
            FROM 
            	community 
            WHERE 
            	channel_id = #{value}::UUID
        </selectKey>
		
    </insert>
    
    
    
    
    
    
    <insert id="registMenu" parameterType="CommunityMenuVO">
    
    	INSERT INTO community_menu (
		    community_id,
		    menu_title,
			menu_read_allow,
			menu_write_allow
		) VALUES (
			<if test='communityId != null
					and communityId != ""
					and title != null
					and title != ""'>
            	#{commnuityId}::UUID,
            	#{menuTitle},
				#{isAllowToRead},
				#{isAllowToWrite}
        	</if>
		);
		
    </insert>
    

    
    
    
    <insert id="registMenuList" parameterType="List" useGeneratedKeys="true" keyProperty="id">

		INSERT INTO community_menu (
			community_id,
			menu_title,
			menu_read_allow,
			menu_write_allow
		) VALUES
		<foreach collection="list" item="menu" separator=", ">
			(
				<if test='menu.communityId != null 
						and menu.communityId != "" 
						and menu.title != null 
						and menu.title != ""'>
	            	#{menu.communityId}::UUID,
	            	#{menu.title},
					#{menu.isAllowToRead},
					#{menu.isAllowToWrite}
	        	</if>
			)
		</foreach>
	       
    </insert>
    
    
    
    
    
    <select id="getMenu" parameterType="String" resultType="CommunityMenuVO">
    	SELECT
			menu_id 		AS id,
			menu_title 		AS title,
			community_id	AS communityId
		FROM
			community_menu
		WHERE
			<if test='value != null and value != ""'>
				menu_id = #{value}::UUID
			</if>
    </select>





	<select id="getMenuList" parameterType="String" resultType="CommunityMenuVO">

		SELECT
			menu_id 	AS id,
			menu_title 	AS title
		FROM
			community_menu
		WHERE
			<if test='value != null and value != ""'>
				community_id = #{value}::UUID
			</if>

	</select>





    <insert id="registPost" parameterType="CommunityPostVO" useGeneratedKeys="true" keyProperty="id">

    	INSERT INTO community_post(
		    community_id,
		    menu_id,
		    writer_id,
		    post_title,
		    post_content,
		    post_comment_block
		) VALUES (
		    #{communityId}::UUID,
		    #{menuId}::UUID,
		    #{writerId}::UUID,
		    #{title},
		    #{content},
		    #{isCommentBlock}
		);

    </insert>
    
    
    
    
    
    <select id="getPostList" parameterType="String" resultType="CommunityPostVO">
    
    	SELECT
    		cp.post_id	 		AS id,
		    cp.post_title 		AS title,
		
			cp.writer_id 		AS writerId,
		    CASE WHEN m.member_alias IS NULL OR m.member_alias = ''
		        THEN m.member_name
		        ELSE m.member_alias
		    END AS writerAlias,
		    
		    m.profile_image 	AS writerProfileImage
		
		FROM 
		    community_menu AS cm
		
		LEFT JOIN community_post AS cp 	ON cm.menu_id 	= cp.menu_id
		LEFT JOIN member AS m 			ON cp.writer_id = m.member_id

		WHERE
    	   	<if test='value != null and value != ""'>
		   		cm.menu_id = #{value}::UUID
		   	</if>
		   	
		ORDER BY cp.created_at ASC;
    
    </select>
    
    
    
    
    
	<select id="getPost" parameterType="String" resultType="CommunityPostVO">
    
    	SELECT 
		    cp.writer_id 			AS writerId,
		    cp.post_title 			AS title,
		    cp.post_content 		AS content,
		    cp.post_comment_block 	AS isCommentBlock,
		    cp.created_at 			AS createdAt,
		    cp.updated_at 			AS updatedAt,
		
		    CASE WHEN m.member_alias IS NULL OR m.member_alias = ''
		        THEN m.member_name
		        ELSE m.member_alias
		    END AS writerAlias,
		    m.profile_image 		AS writerProfileImage,
		    
		    cm.menu_id 				AS menuId,
		    cm.menu_title 			AS menuTitle
		
		FROM 
		    community_post AS cp
		
		LEFT JOIN member 			AS m  ON cp.writer_id = m.member_id
		LEFT JOIN community_menu	AS cm ON cp.menu_id	  = cm.menu_id
		
		WHERE
		   	<if test='value != null and value != ""'>
		   		cp.post_id = #{value}::UUID
		   	</if>
			
    
    </select>





	<insert id="registHome" parameterType="CommunityMenuVO">

		INSERT INTO community_home (
			menu_id,
			community_id,
			setting_flag,
			priority,
			n_thumb
		) VALUES (
		<if test='communityId != null
						and communityId != ""
						and id != null
						and id != "" '>
			#{id}::UUID,
			#{communityId}::UUID,
			#{homeSettingFlag},
			#{homePriority},
			#{nHomeThumb}
		</if>
		);

	</insert>





	<update id="setPost" parameterType="CommunityPostVO">

		UPDATE
			community_post
		SET
			post_title 			= #{title},
			post_content 		= #{content},
			post_comment_block 	= #{isCommentBlock},
			updated_at			= now()
		WHERE
			post_id = #{id}::UUID

	</update>





	<delete id="deletePost" parameterType="String">

		DELETE FROM
		community_post
		WHERE
		<if test='value != null and value != ""'>
			post_id = #{value}::UUID
		</if>

	</delete>





	<insert id="registHomeList" parameterType="List">

		<foreach collection="list" item="menu" separator="; ">
			INSERT INTO community_home (
				menu_id,
				community_id,
				<if test='menu.homeSettingFlag != null'>
					setting_flag, </if>
				<if test='menu.nHomeThumb != null'>
					n_thumb, </if>
				priority
			) VALUES (
				<if test='menu.communityId != null
						and menu.communityId != ""
						and menu.id != null
						and menu.id != "" '>
					#{menu.id}::UUID,
					#{menu.communityId}::UUID,
					<if test='menu.homeSettingFlag != null'>
						#{menu.homeSettingFlag}, </if>
					<if test='menu.nHomeThumb != null'>
						#{menu.nHomeThumb}, </if>
					#{menu.homePriority}
				</if>
			)
		</foreach>

	</insert>
    
    
    
    
    
    <select id="getHomeContent" parameterType="String" resultType="CommunityPostVO">
    	
    	SELECT
			ch.menu_id 						AS menuId,

		    cp.post_id 						AS id,
		    cp.post_title 					AS title,
		    SUBSTR(cp.post_content, 0, 20) 	AS content,

			cp.writer_id 					AS writerId,
			CASE WHEN m.member_alias IS NULL OR m.member_alias = ''
		        THEN m.member_name
		        ELSE m.member_alias
		    END AS writerAlias,
		    m.profile_image 				AS writerProfileImage

		FROM
			community_home AS ch

		RIGHT	JOIN community_post 	AS cp 	ON ch.menu_id 	= cp.menu_id
		RIGHT 	JOIN community_menu 	AS cm 	ON ch.menu_id	= cm.menu_id
		LEFT 	JOIN member 			AS m 	ON cp.writer_id	= m.member_id
		
		WHERE
    		<if test='value != null and value != ""'>
		   		ch.community_id = #{value}::UUID
		   	</if>

		ORDER BY ch.priority ASC ,
				cp.created_at ASC
    	
    </select>





	<select id="getHomeMenu" parameterType="String" resultType="CommunityMenuVO">

		SELECT
			cm.menu_id 				AS id,
			cm.menu_title 			AS title,
		    cm.menu_read_allow 		AS isAllowToRead,
			cm.menu_write_allow 	AS isAllowToWrite,
			ch.priority				AS homePriority

		FROM
			community_home	AS ch

		RIGHT 	JOIN community_menu 	AS cm 	ON ch.menu_id	= cm.menu_id

		WHERE
			<if test='value != null and value != ""'>
				ch.community_id = #{value}::UUID
			</if>
			
		ORDER BY ch.priority ASC

	</select>
    
    
    
    
    
<!--	<insert id="registHistory" paramterType="CommunityPostHistoryVO">
    	
    	IF
	    	INSERT INTO community_post_history(
	    		post_id,
	    		member_id
	    	) VALUES (
	    		#{postId}::UUID,
	    		#{memberId}::UUID
	    	)
    	
    </insert>  -->
    




</mapper>
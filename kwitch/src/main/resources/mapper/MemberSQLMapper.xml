<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">





    <select id="login" parameterType="LoginVO" resultType="MemberVO">

    	SELECT
    		member_id 			 AS id,
    		member_name 		 AS name,
    		member_alias 		 AS alias,

    		i.image_path		 AS profileImagePath,
        	i.image_extension	 AS profileImageExt,

        	sr.authority		 AS systemAuthority

    	FROM member AS m

        LEFT JOIN image 			  AS i 	ON m.member_profile_image 	= i.image_id

		LEFT JOIN member_system_role  AS ms ON m.member_id 				= ms.memeber_id
		LEFT JOIN system_role 		  AS sr ON sr.role_id 				= ms.role_id

    	<trim prefix="WHERE" prefixOverrides="AND">
    		AND member_email = #{email}
    		AND member_pw = #{pw}
    	</trim>

    </select>
    
    
    
    
    
    
    <select id="getMy" parameterType="String" resultType="MemberVO">
		<if test='value != null and value != ""'>
	    	SELECT
	    		member_id 			 AS id,
	    		member_name 		 AS name,
	    		member_alias 		 AS alias,
	
	    		i.image_path		 AS profileImagePath,
	        	i.image_extension	 AS profileImageExt,
	
	        	sr.authority		 AS systemAuthority
	
	    	FROM member AS m
	
	        LEFT JOIN image 			  AS i 	ON m.member_profile_image 	= i.image_id
	
			LEFT JOIN member_system_role  AS ms ON m.member_id 				= ms.memeber_id
			LEFT JOIN system_role 		  AS sr ON sr.role_id 				= ms.role_id
	
	    	WHERE
	    		m.member_id = #{value}::UUID
	    </if>

    </select>





    <insert id="regist" parameterType="MemberVO">

    	INSERT INTO member(
    		member_email,
    		member_pw,
    		member_name,
    		member_alias,
    		member_phone,
    		member_birth
    	) VALUES (
    		#{email},
    		#{pw},
    		#{name},
    		#{alias},
    		#{phone},
    		#{birth}::TIMESTAMP
    	)

    </insert>





    <select id="getDetail" parameterType="String" resultType="MemberVO">

        SELECT
        	member_id			 AS id,
        	member_email		 AS email,
        	member_name			 AS name,

			CASE WHEN m.member_alias IS NULL OR m.member_alias = ''
				THEN m.member_name
				ELSE m.member_alias
			END AS alias,

        	member_message 		 AS message,
        	member_birth 		 AS birth,
        	m.created_at		 AS createAt,

        	i.image_path		 AS profileImagePath,
        	i.image_extension	 AS profileImageExt,

        	ch.channel_id		 AS ownChannelId,

        	co.community_id		 AS ownCommunityId

        FROM member AS m

        LEFT JOIN image 	AS i 	ON m.member_profile_image 	= i.image_id
       	LEFT JOIN channel 	AS ch 	ON m.member_id 				= ch.owner_id
       	LEFT JOIN community AS co	ON ch.channel_id			= co.channel_id

        <where>
        	<if test='value != null and value != ""'>
        		AND member_id = #{value}::uuid
        	</if>
        </where>

    </select>
    
    
    
    
    
    <select id="getMemberBySearch" parameterType="String" resultType="MemberVO" >

		SELECT 
			m.member_id 		AS id,
			
			CASE WHEN m.member_alias IS NULL OR m.member_alias = ''
				THEN m.member_name
				ELSE m.member_alias
			END AS alias,
			
			i.image_path 		AS profileImagePath,
        	i.image_extension 	AS profileImageExt,
        	
        	ch.channel_id 		AS ownChannelId 
		
		FROM 
			member AS m
			
		LEFT JOIN image 	AS i 	ON m.member_profile_image 	= i.image_id 
		LEFT JOIN channel 	AS ch 	ON m.member_id 				= ch.owner_id
		
		WHERE
			m.member_name 	LIKE CONCAT('%', #{value}, '%')
		OR 	m.member_alias 	LIKE CONCAT('%', #{value}, '%')
    
    </select>





    <update id="setProfileImage" parameterType="HashMap">

    	UPDATE member
    	SET member_profile_image 	= #{imageId}::uuid
        WHERE member_id 			= #{memberId}::uuid

    </update>





</mapper>
